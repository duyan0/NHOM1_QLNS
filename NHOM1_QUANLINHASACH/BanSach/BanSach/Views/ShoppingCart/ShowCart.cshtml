@model BanSach.Models.Cart

@{
    ViewBag.Title = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/Shoppingcart.css" rel="stylesheet" />
<script src="~/Content/js/JavaScript.js"></script>
<style>
    .showcart {
        text-align: center;
        padding: 5px;
        border-radius: 15px;
        margin: 40px;
    }

        .showcart h5 {
            padding: 20px 0 0 10px;
        }

    #carQuantity {
        width: 50px;
        padding-left: 10px;
        border-radius: 10px;
    }

    .thanhtien {
        bottom: 0;
        border: solid 1px double;
        border-radius: 15px;
        padding: 15px;
        -moz-box-shadow: 0 4px 8px 0 grey;
        -webkit-box-shadow: 0 4px 8px 0 grey;
    }

    .nutthanhtoan {
        border-radius: 15px;
        color: white;
        background-color: crimson;
        border: none;
        padding: 5px;
        float: right;
    }

    .tb tr td {
        padding-top: 20px;
        color: white;
    }

    .xoa {
        color: white;
        border-radius: 5px;
    }

        .xoa:hover {
            color: black;
            text-decoration: none;
        }

    .thongtinkh input {
        border-radius: 5px;
        padding-left: 15px;
        height: 50px;
        outline: none;
        border: none;
    }

    .btn {
        border-radius: 5px;
    }

    .showcart a {
        background-color: crimson;
        border-radius: 15px;
        padding: 10px;
        color: white;
    }

        .showcart a:hover {
            text-decoration: none;
        }

    .full-width {
        width: 100%;
    }

    .text-center {
        text-align: center;
    }
</style>

<div class="text-center ">
    <h3 class="m-0 display-5 font-weight-semi-bold text-white">GIỎ HÀNG</h3>
</div>

@if (Model == null || Model.Total_quantity() == 0)
{
    <div class="showcart">
        <h5 class="text-white">
            Chưa có sản phẩm trong giỏ hàng của bạn.
        </h5><br />
        @Html.ActionLink("Tiếp tục mua hàng", "ProductList", "SanPhams")
    </div>
}
else
{
    <table class="table-bordered w-100">
        <thead>
            <tr class="text-center font-weight-semi-bold display-5 text-white">
                <th>Thông tin</th>
                <th>Số lượng</th>
                <th>Thành tiền</th>
                <th>Lựa chọn</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                // Sử dụng toán tử ?? để gán giá trị mặc định là 0 nếu GiaBan là null
                decimal giaBan = item._product.GiaBan;
                decimal mucGiamGia = item.MucGiamGia; // Lấy mức giảm giá từ CartItem
                decimal giaSauKhuyenMai = giaBan * (1 - mucGiamGia / 100);
                decimal total = item._quantity * giaSauKhuyenMai;

                <tr class="text-center text-white">
                    <td width="40%">
                        <img src="~/Content/img/@item._product.HinhAnh" alt="@item._product.TenSP" width="140" height="160" style="float:left; border-radius: 15px;" />
                        <p style="padding-top:40px;">
                            @Html.DisplayFor(model => item._product.TenSP)
                        </p>
                        <p>
                            <b style="color:red">@giaSauKhuyenMai.ToString("#,##0").Replace(',', '.') VND</b>
                        </p>
                        @if (mucGiamGia > 0)
                        {
                            <p>
                                <del style="color:grey">@giaBan.ToString("#,##0").Replace(',', '.') VND</del> <!-- Giá gốc -->
                                <span style="color:green;">(@mucGiamGia% Off)</span> <!-- Mức khuyến mãi -->
                            </p>
                        }
                    </td>
                    <td class="text-center">
                        @using (Html.BeginForm("Update_Cart_Quantity", "ShoppingCart"))
                        {
                            <input type="hidden" value="@item._product.IDsp" name="idPro" />
                            <input type="number" min="0" max="@item._product.SoLuong" value="@item._quantity" name="carQuantity" style="width: 50px; text-align: center; border-radius:5px;border:none;" />
                            <button type="submit" class="capnhat">Cập nhật</button>
                        }

                    </td>
                    <td style="color: #c92127;"><b>@total.ToString("#,##0").Replace(',', '.') VND</b></td>
                    <td class="xoa">
                        <form action="/ShoppingCart/RemoveCart/@item._product.IDsp" method="get">
                            @Html.ActionLink("Xóa", "RemoveCart", "ShoppingCart", new { id = item._product.IDsp }, new { @class = "xoa" })
                        </form>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6" style="text-align: right; font-size: x-large; color: white;">
                    Tổng tiền: <b style="color: #c92127;">@Model.Total_money().ToString("#,##0").Replace(',', '.') VND</b>
                </td>
            </tr>
        </tfoot>
    </table>

    <div class="container-fluid">
        <form class="col-7 m-auto" action="/ShoppingCart/CheckOut" method="post">
            <input type="hidden" name="CodeCustomer" value="@Session["IDkh"]" required />
            <table class="tb m-auto table ">
                <tr>
                    <td colspan="2"><h4 class="text-center text-white font-weight-bold">THÔNG TIN</h4></td>
                </tr>
                <tr>
                    <td>
                        Tên :
                    </td>
                    <td class="thongtinkh">
                        <input type="text" class="full-width" name="NameCustomer" maxlength="30" placeholder="Điền họ và tên" value="@Session["TenKH"]" required />
                    </td>
                </tr>
                <tr>
                    <td>
                        Số điện thoại :
                    </td>
                    <td class="thongtinkh">
                        <input style="width:100%"
                               type="tel"
                               name="PhoneCustomer"
                               maxlength="10"
                               placeholder="Điền số điện thoại"
                               value="@Session["SoDT"]"
                               required
                               pattern="\d{10}"
                               title="Số điện thoại phải gồm 10 chữ số" />
                    </td>
                </tr>

                <tr>
                    <td class="thongtinkh">
                        Địa chỉ giao hàng:
                    </td>
                    <td class="thongtinkh" style="position: relative;">
                        <!-- Thêm style position: relative để phần gợi ý được định vị đúng -->
                        <input id="AddressDeliverry" style="width:100%" type="text" name="AddressDeliverry" placeholder="Điền địa chỉ giao hàng" required autocomplete="off" />
                        <div id="suggestions" class="suggestions" style="display:none;"></div> <!-- Phần chứa gợi ý -->
                    </td>
                </tr>
                @if (Session["IDkh"] != null || Session["IDQly"] != null)
                {
                    <tr class="py-2">
                        <td></td>
                        <td style="float:inline-start">
                            <input type="submit" value="Thanh toán" class="btn btn-danger" />
                        </td>
                        <td style="float:inline-start">
                            @if (ViewBag.OrderId != null && ViewBag.OrderId > 0)
                            {
                                @Html.ActionLink("Thanh toán", "MoMoCheckout", "ShoppingCart", new { orderId = ViewBag.OrderId }, null)
                            }
                           
                        </td>
                    </tr>
                }
                else
                {
                    <tr class="py-2">
                        <td class="text-danger font-weight-bold ">Hãy đăng nhập trước</td>
                        <td>
                            <a style="width:120px" href="@Url.Action("LoginAccountCus", "LoginUser")" class="btn btn-danger ">Đăng nhập</a>
                        </td>
                    </tr>
                }




            </table>
        </form>
    </div>
}
<script>
    const apiKey = 'cNNqPnwuPiecDAb0midTWtf8NJkrIXhh3qws63ns';
    const addressInput = document.getElementById('AddressDeliverry');
    const suggestionsContainer = document.getElementById('suggestions');
    const cityInput = document.getElementById('city');
    const districtInput = document.getElementById('district');
    const wardInput = document.getElementById('ward');
    let sessionToken = crypto.randomUUID();

    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    const debouncedSearch = debounce((query) => {
        if (!query || query.length < 2) { // Nếu không có query hoặc query quá ngắn, ẩn gợi ý
            suggestionsContainer.style.display = 'none';
            return;
        }

        // Kiểm tra xem API URL có đúng không
        console.log('Fetching API with query:', query);

        fetch(`https://rsapi.goong.io/Place/AutoComplete?api_key=${apiKey}&input=${encodeURIComponent(query)}&sessiontoken=${sessionToken}`)
            .then(response => {
                // Kiểm tra status code của response
                console.log('Response status:', response.status);
                return response.json();
            })
            .then(data => {
                if (data.status === 'OK') {
                    suggestionsContainer.innerHTML = '';  // Xóa nội dung cũ
                    suggestionsContainer.style.display = 'block';

                    // Kiểm tra xem data.predictions có dữ liệu không
                    console.log('API Data:', data);

                    data.predictions.forEach(prediction => {
                        const div = document.createElement('div');
                        div.className = 'suggestion-item';
                        div.textContent = prediction.description;
                        div.addEventListener('click', () => {
                            addressInput.value = prediction.description;
                            suggestionsContainer.style.display = 'none';

                            // Kiểm tra compound trước khi điền thông tin
                            if (prediction.compound) {
                                cityInput.value = prediction.compound.province || '';
                                districtInput.value = prediction.compound.district || '';
                                wardInput.value = prediction.compound.commune || '';
                            }
                        });
                        suggestionsContainer.appendChild(div);
                    });
                } else {
                    suggestionsContainer.style.display = 'none';
                }
            })
            .catch(error => {
                console.error('Lỗi khi gọi API:', error);
                suggestionsContainer.style.display = 'none';
            });
    }, 300);

    addressInput.addEventListener('input', (e) => debouncedSearch(e.target.value));

    // Ẩn gợi ý khi click ra ngoài
    document.addEventListener('click', function (e) {
        // Kiểm tra nếu người dùng nhấn ra ngoài input hoặc danh sách gợi ý
        if (!suggestionsContainer.contains(e.target) && e.target !== addressInput) {
            suggestionsContainer.style.display = 'none';
        }
    });

</script>
<style>
    .capnhat:hover {
        background-color: #c92127;
        color: white;
        border: none;
        border-radius: 5px;
    }

    .capnhat {
        background-color: white;
        color: black;
        border: none;
        border-radius: 5px;
    }
</style>


